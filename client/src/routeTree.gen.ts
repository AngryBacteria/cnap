/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SummonersIndexImport } from './routes/summoners/index'
import { Route as ChampionsIndexImport } from './routes/champions/index'
import { Route as ChampionsChampionAliasImport } from './routes/champions/$championAlias'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SummonersIndexRoute = SummonersIndexImport.update({
  id: '/summoners/',
  path: '/summoners/',
  getParentRoute: () => rootRoute,
} as any)

const ChampionsIndexRoute = ChampionsIndexImport.update({
  id: '/champions/',
  path: '/champions/',
  getParentRoute: () => rootRoute,
} as any)

const ChampionsChampionAliasRoute = ChampionsChampionAliasImport.update({
  id: '/champions/$championAlias',
  path: '/champions/$championAlias',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/champions/$championAlias': {
      id: '/champions/$championAlias'
      path: '/champions/$championAlias'
      fullPath: '/champions/$championAlias'
      preLoaderRoute: typeof ChampionsChampionAliasImport
      parentRoute: typeof rootRoute
    }
    '/champions/': {
      id: '/champions/'
      path: '/champions'
      fullPath: '/champions'
      preLoaderRoute: typeof ChampionsIndexImport
      parentRoute: typeof rootRoute
    }
    '/summoners/': {
      id: '/summoners/'
      path: '/summoners'
      fullPath: '/summoners'
      preLoaderRoute: typeof SummonersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/champions/$championAlias': typeof ChampionsChampionAliasRoute
  '/champions': typeof ChampionsIndexRoute
  '/summoners': typeof SummonersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/champions/$championAlias': typeof ChampionsChampionAliasRoute
  '/champions': typeof ChampionsIndexRoute
  '/summoners': typeof SummonersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/champions/$championAlias': typeof ChampionsChampionAliasRoute
  '/champions/': typeof ChampionsIndexRoute
  '/summoners/': typeof SummonersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/champions/$championAlias' | '/champions' | '/summoners'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/champions/$championAlias' | '/champions' | '/summoners'
  id:
    | '__root__'
    | '/'
    | '/champions/$championAlias'
    | '/champions/'
    | '/summoners/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChampionsChampionAliasRoute: typeof ChampionsChampionAliasRoute
  ChampionsIndexRoute: typeof ChampionsIndexRoute
  SummonersIndexRoute: typeof SummonersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChampionsChampionAliasRoute: ChampionsChampionAliasRoute,
  ChampionsIndexRoute: ChampionsIndexRoute,
  SummonersIndexRoute: SummonersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/champions/$championAlias",
        "/champions/",
        "/summoners/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/champions/$championAlias": {
      "filePath": "champions/$championAlias.tsx"
    },
    "/champions/": {
      "filePath": "champions/index.tsx"
    },
    "/summoners/": {
      "filePath": "summoners/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
