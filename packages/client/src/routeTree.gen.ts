/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as SummonersIndexImport } from './routes/summoners/index'
import { Route as SessionsIndexImport } from './routes/sessions/index'
import { Route as ChampionsIndexImport } from './routes/champions/index'
import { Route as SummonersSummonerNameTagImport } from './routes/summoners/$summonerNameTag'
import { Route as SessionsSessionObjectIdImport } from './routes/sessions/$sessionObjectId'
import { Route as ChampionsChampionIdImport } from './routes/champions/$championId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const SummonersIndexRoute = SummonersIndexImport.update({
  id: '/summoners/',
  path: '/summoners/',
  getParentRoute: () => rootRoute,
} as any)

const SessionsIndexRoute = SessionsIndexImport.update({
  id: '/sessions/',
  path: '/sessions/',
  getParentRoute: () => rootRoute,
} as any)

const ChampionsIndexRoute = ChampionsIndexImport.update({
  id: '/champions/',
  path: '/champions/',
  getParentRoute: () => rootRoute,
} as any)

const SummonersSummonerNameTagRoute = SummonersSummonerNameTagImport.update({
  id: '/summoners/$summonerNameTag',
  path: '/summoners/$summonerNameTag',
  getParentRoute: () => rootRoute,
} as any)

const SessionsSessionObjectIdRoute = SessionsSessionObjectIdImport.update({
  id: '/sessions/$sessionObjectId',
  path: '/sessions/$sessionObjectId',
  getParentRoute: () => rootRoute,
} as any)

const ChampionsChampionIdRoute = ChampionsChampionIdImport.update({
  id: '/champions/$championId',
  path: '/champions/$championId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/champions/$championId': {
      id: '/champions/$championId'
      path: '/champions/$championId'
      fullPath: '/champions/$championId'
      preLoaderRoute: typeof ChampionsChampionIdImport
      parentRoute: typeof rootRoute
    }
    '/sessions/$sessionObjectId': {
      id: '/sessions/$sessionObjectId'
      path: '/sessions/$sessionObjectId'
      fullPath: '/sessions/$sessionObjectId'
      preLoaderRoute: typeof SessionsSessionObjectIdImport
      parentRoute: typeof rootRoute
    }
    '/summoners/$summonerNameTag': {
      id: '/summoners/$summonerNameTag'
      path: '/summoners/$summonerNameTag'
      fullPath: '/summoners/$summonerNameTag'
      preLoaderRoute: typeof SummonersSummonerNameTagImport
      parentRoute: typeof rootRoute
    }
    '/champions/': {
      id: '/champions/'
      path: '/champions'
      fullPath: '/champions'
      preLoaderRoute: typeof ChampionsIndexImport
      parentRoute: typeof rootRoute
    }
    '/sessions/': {
      id: '/sessions/'
      path: '/sessions'
      fullPath: '/sessions'
      preLoaderRoute: typeof SessionsIndexImport
      parentRoute: typeof rootRoute
    }
    '/summoners/': {
      id: '/summoners/'
      path: '/summoners'
      fullPath: '/summoners'
      preLoaderRoute: typeof SummonersIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/champions/$championId': typeof ChampionsChampionIdRoute
  '/sessions/$sessionObjectId': typeof SessionsSessionObjectIdRoute
  '/summoners/$summonerNameTag': typeof SummonersSummonerNameTagRoute
  '/champions': typeof ChampionsIndexRoute
  '/sessions': typeof SessionsIndexRoute
  '/summoners': typeof SummonersIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/champions/$championId': typeof ChampionsChampionIdRoute
  '/sessions/$sessionObjectId': typeof SessionsSessionObjectIdRoute
  '/summoners/$summonerNameTag': typeof SummonersSummonerNameTagRoute
  '/champions': typeof ChampionsIndexRoute
  '/sessions': typeof SessionsIndexRoute
  '/summoners': typeof SummonersIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/champions/$championId': typeof ChampionsChampionIdRoute
  '/sessions/$sessionObjectId': typeof SessionsSessionObjectIdRoute
  '/summoners/$summonerNameTag': typeof SummonersSummonerNameTagRoute
  '/champions/': typeof ChampionsIndexRoute
  '/sessions/': typeof SessionsIndexRoute
  '/summoners/': typeof SummonersIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/champions/$championId'
    | '/sessions/$sessionObjectId'
    | '/summoners/$summonerNameTag'
    | '/champions'
    | '/sessions'
    | '/summoners'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/champions/$championId'
    | '/sessions/$sessionObjectId'
    | '/summoners/$summonerNameTag'
    | '/champions'
    | '/sessions'
    | '/summoners'
  id:
    | '__root__'
    | '/'
    | '/champions/$championId'
    | '/sessions/$sessionObjectId'
    | '/summoners/$summonerNameTag'
    | '/champions/'
    | '/sessions/'
    | '/summoners/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChampionsChampionIdRoute: typeof ChampionsChampionIdRoute
  SessionsSessionObjectIdRoute: typeof SessionsSessionObjectIdRoute
  SummonersSummonerNameTagRoute: typeof SummonersSummonerNameTagRoute
  ChampionsIndexRoute: typeof ChampionsIndexRoute
  SessionsIndexRoute: typeof SessionsIndexRoute
  SummonersIndexRoute: typeof SummonersIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChampionsChampionIdRoute: ChampionsChampionIdRoute,
  SessionsSessionObjectIdRoute: SessionsSessionObjectIdRoute,
  SummonersSummonerNameTagRoute: SummonersSummonerNameTagRoute,
  ChampionsIndexRoute: ChampionsIndexRoute,
  SessionsIndexRoute: SessionsIndexRoute,
  SummonersIndexRoute: SummonersIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/champions/$championId",
        "/sessions/$sessionObjectId",
        "/summoners/$summonerNameTag",
        "/champions/",
        "/sessions/",
        "/summoners/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/champions/$championId": {
      "filePath": "champions/$championId.tsx"
    },
    "/sessions/$sessionObjectId": {
      "filePath": "sessions/$sessionObjectId.tsx"
    },
    "/summoners/$summonerNameTag": {
      "filePath": "summoners/$summonerNameTag.tsx"
    },
    "/champions/": {
      "filePath": "champions/index.tsx"
    },
    "/sessions/": {
      "filePath": "sessions/index.tsx"
    },
    "/summoners/": {
      "filePath": "summoners/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
